/// {{localName}} class from {{className}} vocabulary
///
{{#comment}}
/// {{{comment}}}
///
{{/comment}}
{{#hasSuperClasses}}
/// Inherits from:
{{#superClasses}}
/// - {{readableName}} ({{{iri}}})
{{/superClasses}}
///
{{/hasSuperClasses}}
/// This class provides access to all properties that can be used with {{localName}}.
/// [Class Reference]({{{classIri}}})
{{#hasSeeAlso}}
///
{{#seeAlso}}
/// [See also]({{{.}}})
{{/seeAlso}}
{{/hasSeeAlso}}
///
/// [Vocabulary Reference]({{{namespace}}})
class {{dartClassName}} {
  // Private constructor prevents instantiation
  const {{dartClassName}}._();

  /// IRI term for the {{localName}} class
  /// Use this to specify that a resource is of this type.
  static const classIri = IriTerm.prevalidated('{{{classIri}}}');

  {{#properties}}
  /// IRI for {{vocabPrefix}}:{{localName}}{{#hasRanges}} [Expects: {{#ranges}}{{{value}}}{{^last}}, {{/last}}{{/ranges}}]{{/hasRanges}}
  {{#comment}}
  ///
  /// {{{comment}}}
  {{/comment}}
  {{#domainDescription}}
  ///
  /// {{{domainDescription}}}
  {{/domainDescription}}
  {{#hasSeeAlso}}
  ///
  {{#seeAlso}}
  /// [See also]({{{.}}})
  {{/seeAlso}}
  {{/hasSeeAlso}}
  ///
  static const {{dartName}} = IriTerm.prevalidated('{{{iri}}}');

  {{/properties}}
}